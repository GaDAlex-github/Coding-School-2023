@page "/ledger"
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@using System.Net.Http.Json;
<h3>Ledger</h3>

@if (LedgerList == null) {
    <Spinner Type="SpinnerType.Border" />
}
else {
    <div class="row">
        <div class="col-md-1">
            <h5 class="form-label">Rent :</h5>
        </div>
        <div class="col-md-2">
            <InputNumber class="form-control" @bind-Value="@rent" />
        </div>
        <div class="col-md-2">
            <button class="btn btn-success" @onclick="Rent"> Save </button>
        </div>
    </div>

    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Year</th>
                <th>Month</th>
                <th>Income</th>
                <th>Expenses</th>
                <th>Total</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var L in LedgerList) {
                <tr>
                    <td>@L.Year</td>
                    <td>@L.Month</td>
                    <td>@L.Income</td>
                    <td>@L.Expenses</td>
                    <td>@L.Total</td>
                </tr>
            }
            <button class="btn btn-warning" @onclick="()=>BackTo()">Back</button>
        </tbody>
    </table>
}

@code {
    private List<LedgerDto> LedgerList = new();
    public decimal rent;

    public async void Rent() {
        if (rent < 0)
            rent = 0;
        LedgerList = await httpClient.GetFromJsonAsync<List<LedgerDto>>("ledger");
        foreach (LedgerDto ledger in LedgerList) {
            ledger.Expenses += rent;
            ledger.Total -= rent;
        }
    }

    protected override async Task OnInitializedAsync() {
        await LoadItemsFromServer();
    }

    private async Task LoadItemsFromServer() {
        rent = 5000;
        Rent();
    }

    private void BackTo() {
        navigationManager.NavigateTo("/");
    }
}
