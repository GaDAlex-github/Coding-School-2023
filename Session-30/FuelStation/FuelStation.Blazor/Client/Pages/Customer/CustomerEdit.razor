@page "/customerlist/edit/{Id:int?}"
@using FuelStation.Blazor.Client.Shared.Extra
@using FuelStation.Blazor.Shared.Customer;
@using FuelStation.Model;
@using System.Net.Http.Json;
@inject HttpClient httpClient
@inject NavigationManager navigationManager

<h3>Create/Edit Customer</h3>

@if (Customer == null) {
    <Spinner Type="SpinnerType.Border" />
}
else {
    <EditForm Model="Customer" OnValidSubmit="OnSave">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="row mt-2">
            <div class="col-md-6">
                <label class="form-label">Name</label>
                <InputText class="form-control" @bind-Value="@Customer.Name" />
                <ValidationMessage For="@(() => Customer.Name)" />
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-md-6">
                <label class="form-label">Surname</label>
                <InputText class="form-control" @bind-Value="@Customer.Surname" />
                <ValidationMessage For="@(() => Customer.Surname)" />
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-md-6">
                <button class="btn btn-success" type="submit">Save Changes</button>
                <button class="btn btn-danger" @onclick="OnCancel">Cancel</button>
            </div>
        </div>
    </EditForm>
}

@code {
    [Parameter] public int? Id { get; set; }
    CustomerEditDto Customer { get; set; } = new();
    bool isLoading = true;

    protected override async Task OnInitializedAsync() {
        if (Id == null) {
            Customer = await httpClient.GetFromJsonAsync<CustomerEditDto>("customer");
        }
        else {
            Customer = await httpClient.GetFromJsonAsync<CustomerEditDto>($"customer/{Id}");
        }
        bool isLoading = false;
    }

    private void OnCancel() {
        navigationManager.NavigateTo("customerlist");
    }

    private async Task OnSave() {
        HttpResponseMessage? response = null;
        if (Id == null) {
            response = await httpClient.PostAsJsonAsync("customer", Customer);
        }
        else {
            response = await httpClient.PutAsJsonAsync("customer", Customer);
        }

        response.EnsureSuccessStatusCode();
        navigationManager.NavigateTo("customerlist");
    }

}
