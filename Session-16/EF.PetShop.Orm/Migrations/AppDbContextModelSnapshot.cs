// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Session_11.EF.PetShopOrm.Context;

#nullable disable

namespace EF.PetShop.Orm.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Session_11.EF.PetShopModel.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PetShopID")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TIN")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("ID");

                    b.HasIndex("PetShopID");

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("Session_11.EF.PetShopModel.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("EmployeeType")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PetShopID")
                        .HasColumnType("int");

                    b.Property<double>("SalaryPerMonth")
                        .HasMaxLength(15)
                        .HasColumnType("float");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("PetShopID");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("Session_11.EF.PetShopModel.Pet", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AnimalType")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<int>("PetShopID")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PetShopID");

                    b.ToTable("Pets", (string)null);
                });

            modelBuilder.Entity("Session_11.EF.PetShopModel.PetFood", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AnimalType")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<double>("PetFoodCost")
                        .HasColumnType("float");

                    b.Property<double>("PetFoodPrice")
                        .HasColumnType("float");

                    b.Property<int>("PetShopID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PetShopID");

                    b.ToTable("PetFoods", (string)null);
                });

            modelBuilder.Entity("Session_11.EF.PetShopModel.PetShop", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.HasKey("ID");

                    b.ToTable("PetShops");
                });

            modelBuilder.Entity("Session_11.EF.PetShopModel.Transaction", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("PetFoodID")
                        .HasColumnType("int");

                    b.Property<double>("PetFoodPrice")
                        .HasColumnType("float");

                    b.Property<double>("PetFoodQty")
                        .HasColumnType("float");

                    b.Property<int>("PetID")
                        .HasColumnType("int");

                    b.Property<double>("PetPrice")
                        .HasColumnType("float");

                    b.Property<int>("PetShopID")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("PetShopID");

                    b.ToTable("Transactions", (string)null);
                });

            modelBuilder.Entity("Session_11.EF.PetShopModel.Customer", b =>
                {
                    b.HasOne("Session_11.EF.PetShopModel.PetShop", "PetShop")
                        .WithMany("Customers")
                        .HasForeignKey("PetShopID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PetShop");
                });

            modelBuilder.Entity("Session_11.EF.PetShopModel.Employee", b =>
                {
                    b.HasOne("Session_11.EF.PetShopModel.PetShop", "PetShop")
                        .WithMany("Employees")
                        .HasForeignKey("PetShopID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PetShop");
                });

            modelBuilder.Entity("Session_11.EF.PetShopModel.Pet", b =>
                {
                    b.HasOne("Session_11.EF.PetShopModel.PetShop", "PetShop")
                        .WithMany("Pets")
                        .HasForeignKey("PetShopID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PetShop");
                });

            modelBuilder.Entity("Session_11.EF.PetShopModel.PetFood", b =>
                {
                    b.HasOne("Session_11.EF.PetShopModel.PetShop", "PetShop")
                        .WithMany("PetFoods")
                        .HasForeignKey("PetShopID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PetShop");
                });

            modelBuilder.Entity("Session_11.EF.PetShopModel.Transaction", b =>
                {
                    b.HasOne("Session_11.EF.PetShopModel.PetShop", "PetShop")
                        .WithMany("Transactions")
                        .HasForeignKey("PetShopID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PetShop");
                });

            modelBuilder.Entity("Session_11.EF.PetShopModel.PetShop", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Employees");

                    b.Navigation("PetFoods");

                    b.Navigation("Pets");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
